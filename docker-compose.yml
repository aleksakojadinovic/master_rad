services:
  proxy:
    container_name: proxy-local
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./services/proxy/development/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./services/proxy/development/sites-enabled:/etc/nginx/sites-enabled:ro"
      - "./services/proxy/development/certificates:/var/www/dev.sts.com/certificates:ro"
      - "./services/proxy/development/certificates:/var/www/metrics.sts.com/certificates:ro"
      - "./services/proxy/development/passwd/passwd_file:/etc/nginx/.htpasswd"
      - "./images:/usr/share/nginx/html/images:ro"
      - "./services/service-worker/firebase-messaging-sw.js:/var/www/dev.sts.com/firebase-messaging-sw.js:ro"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  maindb:
    container_name: main-db-local
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - 27017:27017
    volumes:
      - main-db-data:/data/db
    extra_hosts:
      - "host.docker.internal:host-gateway"

  api_main:
    container_name: api-main-local
    build:
      context: ./services/api-main
      dockerfile: ./docker/Dockerfile.development
    environment:
      MAIN_DB_USERNAME: ${MAIN_DB_USERNAME}
      MAIN_DB_PWD: ${MAIN_DB_PWD}
      JWT_SECRET: ${JWT_SECRET}
      FIREBASE_KEY_PATH: "/app/certificates/sts-firebase-key.json"
    ports:
      - "3001:3000"
    volumes:
      - "./services/api-main:/app"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ssr:
    container_name: ssr-local
    build:
      context: ./services/ssr
      dockerfile: ./docker/Dockerfile.development
    ports:
      - "3003:3000"
    environment:
      NODE_ENV: "development"
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
    volumes:
      - "./services/ssr:/app/"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  etl:
    container_name: etl-local
    build:
      context: ./services/etl
      dockerfile: ./docker/Dockerfile
    environment:
      MAIN_DB_USERNAME: ${MAIN_DB_USERNAME}
      MAIN_DB_PWD: ${MAIN_DB_PWD}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./services/etl/scripts:/app/scripts

  analytics:
    container_name: analytics-local
    build:
      context: ./services/analytics
      dockerfile: ./Dockerfile
    ports:
      - "3004:8501"
    environment:
      MAIN_DB_USERNAME: ${MAIN_DB_USERNAME}
      MAIN_DB_PWD: ${MAIN_DB_PWD}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./services/analytics:/app

  seeder:
    container_name: seeder
    build:
      context: ./tools/seeder
      dockerfile: Dockerfile
    environment:
      MAIN_DB_USERNAME: ${MAIN_DB_USERNAME}
      MAIN_DB_PWD: ${MAIN_DB_PWD}
    volumes:
      - ./tools/seeder/:/app

volumes:
  main-db-data:
